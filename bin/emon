#!/usr/bin/env ruby

require 'shellwords'
require 'optparse'

def run_test(test_path, options)
  exec_value = [
    'mix',
    options[:coveralls] ? 'coveralls.html' : 'test',
    '--color',
    test_path
  ].compact.shelljoin

  cmd = [
    'nodemon',
    '--verbose',
    '--ignore', '**/TAGS',
    '--ignore', '**/tags',
    '--ignore', '**/*.dump',
    '--ignore', '**/*.beam',
    '--ignore', '**/deps/**/*',
    '--ignore', '**/_build/**/*',
    '--watch', '.',
    '--ext', 'ex exs',
    '--exec', exec_value
  ]

  cmd_s = Shellwords.join(cmd)
  puts exec_value
  system cmd_s
end

def parse_options
  options = {}
  OptionParser.new do |opts|
    opts.banner = "Usage: emon [options] [files]"

    opts.on("-c", "--[no-]coveralls-html", "Run mix coveralls.html rather than mix test") do |v|
      options[:coveralls] = v
    end
  end.parse!
  options
end

def guess_test_path(path)
  if /_test\.exs/.match(path)
    result = path
  else
    test_filename = File.basename(path.gsub(/\.ex$/, '_test.exs'))
    result = Dir.glob(File.join("**", test_filename)).first
  end
  p result: result
  if result.nil? || result.empty?
    nil
  else
    result.sub(/.*apps\/.*?\//, '') # account for umbrella apps
  end
end

def run
  options = parse_options
  path = ARGV[0]
  run_test(guess_test_path(path), options)
end

run
