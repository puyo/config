#!/usr/bin/env ruby

# In a Vim phase at the moment...
# exec "#{ENV['HOME']}/bin/g", *ARGV

# Similar to this:
#
#     #!/bin/bash
#
#     emacsclient -nq "${@}" 2> /dev/null || emacs --chdir "${PWD}" "${@}" &
#
# But it handles input like this:
#
#     e f1.js:20 f2.js:30
#
# Which opens f1.js and f2.js at line numbers 20 and 30 respectively.
#
# It opens the current directory if no arguments are provided.

require 'open3'

ENV['GEM_HOME'] = nil
ENV['GEM_PATH'] = nil
ENV['GEM_ROOT'] = nil
ENV['RUBY_VERSION'] = nil

emacs = 'emacs'
emacsclient = 'emacsclient'

args =
  if ARGV.any?
    ARGV.map do |arg|
      file, line, col = arg.split(':')
      file.gsub!(%r{^[ab]/}, '') # git diff
      if line && col
        ["+#{line}:#{col}", file]
      elsif line
        ["+#{line}", file]
      elsif file != line
        file
      else
        arg
      end
    end.flatten
  else
    ['.']
  end

def find(orig_path)
  path = orig_path
  loop do
    return path if File.exist?(path)

    parts = path.split(File::SEPARATOR)
    return orig_path if parts.size <= 2

    path = File.join(*parts[1, parts.size])
  end
  orig_path
end

args = args.map { |a| find(a) }

Open3.popen2e(emacsclient, '-n', *args) do |_in, out, wait_thr|
  exit_status = wait_thr.value
  if exit_status.success?
    Open3.capture2(emacsclient, '-nqe', '(select-frame-set-input-focus (selected-frame))')
  else
    if `pgrep emacs` == ''
      Process.spawn(emacs, '--chdir', Dir.pwd, *args)
    else
      print out.read
    end
  end
end
