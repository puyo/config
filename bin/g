#!/usr/bin/env ruby
#
# Greg's gvim wrapper. Parses arguments and opens all sorts of random junk I
# paste into it. ;)

require 'open3'

vim = 'gvim'
line = nil

running = system("#{vim} --serverlist | grep -q VIM")
args =
  if ARGV.size == 1
    file, line = ARGV.first.split(':')
    file.gsub!(%r{^[ab]/}, '') # git diff
    [file]
  elsif ARGV.size > 1
    ARGV
  else
    ['.']
  end

def find(orig_path)
  path = orig_path
  loop do
    return path if File.exist?(path)

    parts = path.split(File::SEPARATOR)
    return orig_path if parts.size <= 2

    path = File.join(*parts[1, parts.size])
  end
  orig_path
end

args = args.map { |a| find(a) }

if running
  args.each { |arg| system(vim, '--remote-silent', arg) }
else
  system(vim, *args)
end

system(vim, '--remote-send', ":#{line}<CR>") if line

# X11
# system('wmctrl', '-a', 'GVIM')

# KDE Wayland
stdout, status = Open3.capture2('kdotool', 'search', 'GVIM')
if status.success? && m = stdout.match(/^(\S+)$/)
  Open3.capture2e('kdotool', 'windowactivate', m.captures.first)
end
